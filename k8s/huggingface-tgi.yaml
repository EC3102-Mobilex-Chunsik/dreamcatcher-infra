---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: huggingface-tgi
  labels:
    app: huggingface-tgi
spec:
  selector:
    matchLabels:
      app: huggingface-tgi
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-sdk: "true"
      labels:
        app: huggingface-tgi
    spec:
      containers:
        - name: huggingface-tgi
          image: ghcr.io/huggingface/text-generation-inference:2.0
          args:
            - --otlp-endpoint
            - $(OTEL_EXPORTER_OTLP_ENDPOINT)
          env:
            # - name: CORS_ALLOW_ORIGIN
            #   value: "*"
            - name: DTYPE
              value: float16
            - name: MODEL_ID
              # value: yanolja/EEVE-Korean-Instruct-10.8B-v1.0
              # value: beomi/Llama-3-Open-Ko-8B-Instruct-preview
              value: beomi/Llama-3-KoEn-8B-Instruct-preview
            - name: PORT
              value: "8080"
            # Possible values:
            # - awq:              4 bit quantization. Requires a specific AWQ quantized model: <https://hf.co/models?search=awq>. Should replace GPTQ models wherever possible because of the better latency
            # - eetq:             8 bit quantization, doesn't require specific model. Should be a drop-in replacement to bitsandbytes with much better performance. Kernels are from <https://github.com/NetEase-FuXi/EETQ.git>
            # - gptq:             4 bit quantization. Requires a specific GTPQ quantized model: <https://hf.co/models?search=gptq>. huggingface-tgi-inference will use exllama (faster) kernels wherever possible, and use triton kernel (wider support) when it's not. AWQ has faster kernels
            # - bitsandbytes:     Bitsandbytes 8bit. Can be applied on any model, will cut the memory requirement in half, but it is known that the model will be much slower to run than the native f16
            # - bitsandbytes-nf4: Bitsandbytes 4bit. Can be applied on any model, will cut the memory requirement by 4x, but it is known that the model will be much slower to run than the native f16
            # - bitsandbytes-fp4: Bitsandbytes 4bit. nf4 should be preferred in most cases but maybe this one has better perplexity performance for you model
            # - fp8:              [FP8](https://developer.nvidia.com/blog/nvidia-arm-and-intel-publish-fp8-specification-for-standardization-as-an-interchange-format-for-ai/) (e4m3) works on H100 and above This dtype has native ops should be the fastest if available. This is currently not the fastest because of local unpacking + padding to satisfy matrix multiplication limitations
            - name: QUANTIZE
              value: bitsandbytes-nf4
            - name: RUST_LOG
              value: INFO
            - name: SHARDED
              value: "true"
            # - name: TRUST_REMOTE_CODE
            #   value: "false"
          resources:
            limits:
              cpu: "4"
              memory: "12Gi"
              nvidia.com/gpu: "2"
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          volumeMounts:
            - name: cache
              mountPath: /data
            - name: dshm
              mountPath: /dev/shm
            - name: huggingface-hub-token
              mountPath: /root/.cache/huggingface/token
              subPath: token
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: huggingface-hub-cache
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        - name: huggingface-hub-token
          secret:
            secretName: huggingface-hub
            items:
              - key: HUGGING_FACE_HUB_TOKEN
                path: token
---
apiVersion: v1
kind: Service
metadata:
  name: huggingface-tgi
  labels:
    app: huggingface-tgi
spec:
  type: ClusterIP
  selector:
    app: huggingface-tgi
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: huggingface-hub-cache
  labels:
    app: text-generation
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: ceph-filesystem
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: huggingface-hub
#   labels:
#     app: text-generation
# stringData:
#   # TODO(user): change your own token!
#   # HELP: Go to https://huggingface.co/settings/tokens
#   HUGGING_FACE_HUB_TOKEN: "TODO"

